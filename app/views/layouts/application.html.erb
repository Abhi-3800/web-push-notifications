<!DOCTYPE html>
<html>
  <head>
    <title>Notify</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
  </head>

  <body>
    <%= yield %>
    <script src="https://www.gstatic.com/firebasejs/7.14.6/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.14.6/firebase-messaging.js"></script>
    <script>
      const firebaseConfig = {
        apiKey: "AIzaSyCrU4mU0UVcdPpIkPH_i8_XXfntSRvm3Rg",
        authDomain: "web-notifications-f2cd9.firebaseapp.com",
        projectId: "web-notifications-f2cd9",
        storageBucket: "web-notifications-f2cd9.appspot.com",
        messagingSenderId: "697809198230",
        appId: "1:697809198230:web:2506f7cd26ea04de83f6b7",
        measurementId: "G-HXCWB2V578"
      };
      // Initialize Firebase
      const app = firebase.initializeApp(firebaseConfig);
      const messaging = firebase.messaging();
      function IntitalizeFireBaseMessaging() {
          messaging
              .requestPermission()
              .then(function () {
                  console.log("Notification Permission");
                  return messaging.getToken();
              })
              .then(function (token) {
                  sendTokenToServer(token);
                  console.log("Token : "+token);
                  window.localStorage.setItem('localToken',token)
                  document.getElementById("token").innerHTML=token;
              })
              .catch(function (error) {
                  console.log(error);
              });
      }
      messaging.onMessage(function (payload) {
          console.log(payload);
          const notificationOption = {
              body:payload.notification.body,
              title:payload.notification.title
          };
          if(Notification.permission === "granted"){
              var notification=new Notification(payload.notification.title,notificationOption);
              notification.onclick=function (ev) {
                  ev.preventDefault();
                  window.open(payload.notification.click_action,'_blank');
                  notification.close();
              }
          }
      });

      messaging.onTokenRefresh(function () {
          messaging.getToken()
              .then(function (newtoken) {
                  console.log("New Token : "+ newtoken);
              })
              .catch(function (error) {
                  console.log(error);
              })
      })
      function sendTokenToServer(token) {
        if (!isTokenSentToServer()) {
        console.log('Sending token to server...');
        setTokenSentToServer(true);
        } 
        else {
        console.log('Token already sent to server so won\'t send it again ' +
            'unless it changes');
        }
      }
      function setTokenSentToServer(sent) {
        window.localStorage.setItem('sentToServer', sent ? '1' : '0');
      }
      function isTokenSentToServer() {
        return window.localStorage.getItem('sentToServer') === '1';
      }
      function showToken(){
        IntitalizeFireBaseMessaging(); 
      }
    </script>   
  </body>
</html> 